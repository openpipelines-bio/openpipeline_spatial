name: "from_cosmx_to_spatialexperiment"
namespace: "convert"
version: "build_main"
authors:
- name: "Dorien Roosen"
  roles:
  - "author"
  - "maintainer"
  info:
    role: "Core Team Member"
    links:
      email: "dorien@data-intuitive.com"
      github: "dorien-er"
      linkedin: "dorien-roosen"
    organizations:
    - name: "Data Intuitive"
      href: "https://www.data-intuitive.com"
      role: "Data Scientist"
argument_groups:
- name: "Arguments"
  arguments:
  - type: "file"
    name: "--input"
    alternatives:
    - "-i"
    description: "Input CosMx directory"
    info: null
    example:
    - "path/to/cosmx_bundle"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "boolean"
    name: "--add_tx_path"
    description: "Whether to add parquet paths to the metadata. \nIf True, `*_tx_file.csv`\
      \ file will be converted to .parquet and added to the metadata. \n"
    info: null
    default:
    - true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "boolean"
    name: "--add_polygon_path"
    description: "Whether to add polygon path to the metadata.\nIf True, `*_polygons.csv`\
      \ file will be converted to .parquet and be added to the metadata.\n"
    info: null
    default:
    - true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "boolean"
    name: "--add_fov_positions"
    description: "Whether to add fov positions to the metadata.\nIf True, `fov_positions_file.csv`\
      \ will be added to the metadata.\n"
    info: null
    default:
    - true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--alternative_experiment_features"
    description: "Feature names containing these strings will be moved to altExps(sxe)\
      \ slots as separate SpatialExperiment objects."
    info: null
    default:
    - "NegPrb"
    - "Negative"
    - "SystemControl"
    - "FalseCode"
    required: false
    direction: "input"
    multiple: true
    multiple_sep: ";"
  - type: "file"
    name: "--output"
    alternatives:
    - "-o"
    description: "Output SpatialExperiment file"
    info: null
    example:
    - "output.rds"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ";"
resources:
- type: "r_script"
  path: "script.R"
  is_executable: true
- type: "file"
  path: "nextflow_labels.config"
  dest: "nextflow_labels.config"
description: "Creates a SpatialExperiment object from the downloaded unzipped CosMx\
  \ directory for Nanostring\nCosMx spatial gene expression data, and saves it as\
  \ a SpatialExperiment object.\nThe constructor assumes the downloaded unzipped CosMx\
  \ Folder has the following structure:\n\nMandatory files\n· | — *_exprMat_file.csv\n\
  · | — *_metadata_file.csv\nOptional files, by default added to the metadata() as\
  \ a list of paths (will be converted to parquet):\n· | —*_fov_positions_file.csv\n\
  · | — *_tx_file.csv\n· | — *_polygons.csv\n"
test_resources:
- type: "r_script"
  path: "test.R"
  is_executable: true
- type: "file"
  path: "Lung5_Rep2_tiny"
info: null
status: "enabled"
scope:
  image: "public"
  target: "public"
repositories:
- type: "github"
  name: "openpipeline"
  repo: "openpipelines-bio/openpipeline"
  tag: "2.1.2"
- type: "vsh"
  name: "openpipeline_incubator"
  repo: "openpipeline_incubator"
  tag: "build/main"
links:
  repository: "https://github.com/openpipelines-bio/openpipeline_spatial"
  docker_registry: "ghcr.io"
runners:
- type: "executable"
  id: "executable"
  docker_setup_strategy: "ifneedbepullelsecachedbuild"
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "lowmem"
    - "singlecpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1000000000.B"
      mem2gb: "memory = 2000000000.B"
      mem5gb: "memory = 5000000000.B"
      mem10gb: "memory = 10000000000.B"
      mem20gb: "memory = 20000000000.B"
      mem50gb: "memory = 50000000000.B"
      mem100gb: "memory = 100000000000.B"
      mem200gb: "memory = 200000000000.B"
      mem500gb: "memory = 500000000000.B"
      mem1tb: "memory = 1000000000000.B"
      mem2tb: "memory = 2000000000000.B"
      mem5tb: "memory = 5000000000000.B"
      mem10tb: "memory = 10000000000000.B"
      mem20tb: "memory = 20000000000000.B"
      mem50tb: "memory = 50000000000000.B"
      mem100tb: "memory = 100000000000000.B"
      mem200tb: "memory = 200000000000000.B"
      mem500tb: "memory = 500000000000000.B"
      mem1gib: "memory = 1073741824.B"
      mem2gib: "memory = 2147483648.B"
      mem4gib: "memory = 4294967296.B"
      mem8gib: "memory = 8589934592.B"
      mem16gib: "memory = 17179869184.B"
      mem32gib: "memory = 34359738368.B"
      mem64gib: "memory = 68719476736.B"
      mem128gib: "memory = 137438953472.B"
      mem256gib: "memory = 274877906944.B"
      mem512gib: "memory = 549755813888.B"
      mem1tib: "memory = 1099511627776.B"
      mem2tib: "memory = 2199023255552.B"
      mem4tib: "memory = 4398046511104.B"
      mem8tib: "memory = 8796093022208.B"
      mem16tib: "memory = 17592186044416.B"
      mem32tib: "memory = 35184372088832.B"
      mem64tib: "memory = 70368744177664.B"
      mem128tib: "memory = 140737488355328.B"
      mem256tib: "memory = 281474976710656.B"
      mem512tib: "memory = 562949953421312.B"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
    script:
    - "includeConfig(\"nextflow_labels.config\")"
  debug: false
  container: "docker"
engines:
- type: "docker"
  id: "docker"
  image: "rocker/r2u:24.04"
  namespace_separator: "/"
  setup:
  - type: "apt"
    packages:
    - "libhdf5-dev"
    - "libgeos-dev"
    interactive: false
  - type: "r"
    bioc:
    - "SpatialExperimentIO"
    bioc_force_install: false
    warnings_as_errors: true
  test_setup:
  - type: "r"
    cran:
    - "testthat"
    bioc_force_install: false
    warnings_as_errors: true
  entrypoint: []
  cmd: null
build_info:
  config: "src/convert/from_cosmx_to_spatialexperiment/config.vsh.yaml"
  runner: "executable"
  engine: "docker"
  output: "target/executable/convert/from_cosmx_to_spatialexperiment"
  executable: "target/executable/convert/from_cosmx_to_spatialexperiment/from_cosmx_to_spatialexperiment"
  viash_version: "0.9.4"
  git_commit: "46b97b56724d241439f09d3748315a26f03a300d"
  git_remote: "https://github.com/openpipelines-bio/openpipeline_spatial"
package_config:
  name: "openpipeline_spatial"
  version: "build_main"
  info:
    test_resources:
    - type: "s3"
      path: "s3://openpipelines-bio/openpipeline_spatial/resources_test"
      dest: "resources_test"
  repositories:
  - type: "github"
    name: "openpipeline"
    repo: "openpipelines-bio/openpipeline"
    tag: "2.1.2"
  - type: "vsh"
    name: "openpipeline_incubator"
    repo: "openpipeline_incubator"
    tag: "build/main"
  viash_version: "0.9.4"
  source: "src"
  target: "target"
  config_mods:
  - ".resources += {path: '/src/workflows/utils/labels.config', dest: 'nextflow_labels.config'}\n\
    .runners[.type == 'nextflow'].config.script := 'includeConfig(\"nextflow_labels.config\"\
    )'"
  organization: "openpipelines-bio"
  links:
    repository: "https://github.com/openpipelines-bio/openpipeline_spatial"
    docker_registry: "ghcr.io"
